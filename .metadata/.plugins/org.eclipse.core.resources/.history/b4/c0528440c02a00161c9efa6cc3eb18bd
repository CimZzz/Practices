package designpattern.behavioral.command;

/**
 * 测试：Command 的了解与使用
 * Command模式将Button 与 StringBuilder 进行解耦（本应在Button的Click函数中执行StringBuilder的操作），
 * 提供了Execute , UnExecute , Redo 等操作
 * @author CimZzz
 *
 */
public class Client {
	static StringBuilder stringBuilder = new StringBuilder();
	
	private static void displayString()
	{
		System.out.println(stringBuilder.toString());
	}
	
	public static void main(String[] args){
		MarcoCommand command = new MarcoCommand();
		ACommand aCommand = new ACommand(stringBuilder);
		Button button = new Button(aCommand);
		
		command.addCommand(aCommand);

		button.click();
		button.click();
		button.click();
		button.click();
		button.click();
		button.click();
		button.click();
		
		displayString();
		
		command.unExecute();
		command.unExecute();
		command.unExecute();
		command.unExecute();
		
		displayString();
		
		button.click();
		button.click();
		button.click();
		button.click();
		button.click();
		
		displayString();
		
	}
	
}
