package designpattern.behavioral.command;

import java.util.LinkedList;
import java.util.List;

public class ACommand implements Command{
	private List<Command> commands;
	
	public ACommand() {
		commands = new LinkedList<>();
	}
	
	public void addCommand(Command command)
	{
		commands.add(command);
	}
	
	public void removeCommand(Command command)
	{
		commands.remove(command);
	}
	
	@Override
	public void execute() {
		for(Command command : commands)
		{
			command.execute();
		}
	}
	
	@Override
	public void unExecute()
	{
		for(Command command : commands)
		{
			command.unExecute();
		}
	}
}
